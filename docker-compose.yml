version: "3"
services:
  #database:
  #  image: mysql:5.7
  #  restart: always
  #  environment:
  #    MYSQL_DATABASE: "db"
  #    MYSQL_USER: "admin"
  #    MYSQL_PASSWORD: "test"
  #    MYSQL_ROOT_PASSWORD: "test"
  #  ports:
  #    - "3306:3306"
  #  volumes:
  #    - ../docker/db/data:/var/lib/mysql

  #phpmyadmin:
  #  depends_on:
  #    - database
  #  image: phpmyadmin/phpmyadmin
  #  container_name: phpmyadmin
  #  restart: always
  #  ports:
  #    - "8083:80"
  #  environment:
  #    MYSQL_USERNAME: "root"
  #    MYSQL_ROOT_PASSWORD: "test"
  #    PMA_HOST: "database

  minio:
    image: minio/minio
    volumes:
      - ../docker/minio/data:/data
      - ../docker/minio/config:/root/.minio
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: admin1234
      MINIO_STORAGE_USE_HTTPS: "false"
    networks:
      - net1
    command: server /data

  fastapi:
    build: app/
    ports:
      - 5000:80
    networks:
      - net1
    container_name: fastapi

  jupyter-lab:
    image: "jupyter-image"
    container_name: jupyter-lab
    volumes:
      - ../docker/jupyter_data:/home/jovyan/work
    ports:
      - 8888:8888
    networks:
      - net1
    environment:
      - JUPYTER_ENABLE_LAB=yes

  #spark-master:
  #  image: bde2020/spark-master:2.4.5-hadoop2.7
  #  container_name: spark-master
  #  ports:
  #    - "8082:8080"
  #    - "7077:7077"
  #    - "4040:4040"
  #  volumes:
  #    - ../docker/spark_data:/data
  #  environment:
  #    - INIT_DAEMON_STEP=setup_spark
  #  networks:
  #    - net1

  #spark-worker-1:
  #  image: bde2020/spark-worker:2.4.5-hadoop2.7
  #  container_name: spark-worker-1
  #  depends_on:
  #    - spark-master
  #  ports:
  #    - "8081:8081"
  #  volumes:
  #    - ../docker/spark_data:/data
  #  environment:
  #    - SPARK_MASTER=spark://spark-master:7077
  #  networks:
  #    - net1

  redis:
    image: "redis:alpine"
    container_name: redis
    command: redis-server
    ports:
      - "6379:6379"
    volumes:
      - ../docker/redis-data:/var/lib/redis
      - ../docker/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - net1

networks:
  net1:
    driver: bridge
